// <auto-generated />
using System;
using Depot.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Depot.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20200413010545_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Depot.Business.Models.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("Depot.Business.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("FornecedorId");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Depot.Business.Models.Estoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCadastro");

                    b.Property<string>("NomeEstoque")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<Guid>("produtoId");

                    b.HasKey("Id");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("Depot.Business.Models.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TipoFornecedor");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Depot.Business.Models.GrupoProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Depot.Business.Models.Historico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AutorizadorId");

                    b.Property<Guid>("ColaboradorId");

                    b.Property<DateTime>("DataMovimento")
                        .HasColumnType("datetime");

                    b.Property<Guid>("DepositanteId");

                    b.Property<DateTime>("HoraMovimento");

                    b.Property<Guid>("RetiranteId");

                    b.Property<int>("TipoMovimento");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Historicos");
                });

            modelBuilder.Entity("Depot.Business.Models.HistoricoProduto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("HistoricoId");

                    b.Property<Guid>("ProdutoId");

                    b.HasKey("Id");

                    b.HasIndex("HistoricoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("HistoricoProdutos");
                });

            modelBuilder.Entity("Depot.Business.Models.Perfil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ColaboradorId");

                    b.Property<string>("NomePerfil")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId")
                        .IsUnique();

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("Depot.Business.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("EstoqueId");

                    b.Property<Guid>("FornecedorId");

                    b.Property<Guid>("GrupoId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("GrupoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Depot.Business.Models.Endereco", b =>
                {
                    b.HasOne("Depot.Business.Models.Fornecedor", "Fornecedor")
                        .WithOne("Endereco")
                        .HasForeignKey("Depot.Business.Models.Endereco", "FornecedorId");
                });

            modelBuilder.Entity("Depot.Business.Models.Historico", b =>
                {
                    b.HasOne("Depot.Business.Models.Colaborador", "Colaborador")
                        .WithMany("Historicos")
                        .HasForeignKey("ColaboradorId");
                });

            modelBuilder.Entity("Depot.Business.Models.HistoricoProduto", b =>
                {
                    b.HasOne("Depot.Business.Models.Historico", "Historico")
                        .WithMany("HistoricoProduto")
                        .HasForeignKey("HistoricoId");

                    b.HasOne("Depot.Business.Models.Produto", "Produto")
                        .WithMany("HistoricoProduto")
                        .HasForeignKey("ProdutoId");
                });

            modelBuilder.Entity("Depot.Business.Models.Perfil", b =>
                {
                    b.HasOne("Depot.Business.Models.Colaborador", "Colaborador")
                        .WithOne("Perfil")
                        .HasForeignKey("Depot.Business.Models.Perfil", "ColaboradorId");
                });

            modelBuilder.Entity("Depot.Business.Models.Produto", b =>
                {
                    b.HasOne("Depot.Business.Models.Estoque", "Estoque")
                        .WithMany("Produtos")
                        .HasForeignKey("EstoqueId");

                    b.HasOne("Depot.Business.Models.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId");

                    b.HasOne("Depot.Business.Models.GrupoProduto", "GrupoProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("GrupoId");
                });
#pragma warning restore 612, 618
        }
    }
}
